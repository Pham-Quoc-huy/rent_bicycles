{
  "info": {
    "name": "Rent Bicycles - Full Flow Test",
    "description": "Test toàn bộ flow từ đăng ký, đăng nhập, đặt xe, thanh toán đến lấy xe",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    },
    {
      "key": "invoiceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "paymentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "qrCode",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Authentication Flow",
      "item": [
        {
          "name": "1.1. Đăng ký tài khoản",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success) {",
                  "        pm.collectionVariables.set('authToken', response.data.token);",
                  "        pm.collectionVariables.set('userId', response.data.user.id);",
                  "        console.log('✅ Đăng ký thành công, token:', response.data.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\",\n  \"fullName\": \"Nguyễn Văn Test\",\n  \"phone\": \"0123456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "1.2. Đăng nhập",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success) {",
                  "        pm.collectionVariables.set('authToken', response.data.token);",
                  "        pm.collectionVariables.set('userId', response.data.user.id);",
                  "        console.log('✅ Đăng nhập thành công, token:', response.data.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "1.3. Validate Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/validate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "validate"]
            }
          }
        }
      ]
    },
    {
      "name": "2. Station Management",
      "item": [
        {
          "name": "2.1. Lấy danh sách trạm xe",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/stations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stations"]
            }
          }
        },
        {
          "name": "2.2. Tìm kiếm trạm theo thành phố",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/stations/search?city=Hà Nội",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stations", "search"],
              "query": [
                {
                  "key": "city",
                  "value": "Hà Nội"
                }
              ]
            }
          }
        },
        {
          "name": "2.3. Lấy thông tin trạm theo ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/stations/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stations", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Booking Flow",
      "item": [
        {
          "name": "3.1. Tạo booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success) {",
                  "        pm.collectionVariables.set('bookingId', response.data.booking.id);",
                  "        pm.collectionVariables.set('invoiceId', response.data.invoice.id);",
                  "        console.log('✅ Tạo booking thành công, ID:', response.data.booking.id);",
                  "        console.log('✅ Tạo invoice thành công, ID:', response.data.invoice.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stationId\": 1,\n  \"bikeQuantity\": 2,\n  \"notes\": \"Test booking\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "create"]
            }
          }
        },
        {
          "name": "3.2. Lấy thông tin booking",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "{{bookingId}}"]
            }
          }
        },
        {
          "name": "3.3. Lấy danh sách booking của user",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/my-bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "my-bookings"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Invoice Management",
      "item": [
        {
          "name": "4.1. Lấy thông tin invoice",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/invoices/{{invoiceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "invoices", "{{invoiceId}}"]
            }
          }
        },
        {
          "name": "4.2. Lấy danh sách invoice của user",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/invoices/my-invoices",
              "host": ["{{baseUrl}}"],
              "path": ["api", "invoices", "my-invoices"]
            }
          }
        }
      ]
    },
    {
      "name": "5. Payment Flow",
      "item": [
        {
          "name": "5.1. Tạo payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success) {",
                  "        pm.collectionVariables.set('paymentId', response.data.payment.id);",
                  "        console.log('✅ Tạo payment thành công, ID:', response.data.payment.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invoiceId\": {{invoiceId}},\n  \"amount\": 100000,\n  \"paymentMethod\": \"VNPAY\",\n  \"customerEmail\": \"test@example.com\",\n  \"description\": \"Thanh toán thuê xe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "create"]
            }
          }
        },
        {
          "name": "5.2. Lấy thông tin payment",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/payments/{{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "{{paymentId}}"]
            }
          }
        },
        {
          "name": "5.3. Lấy danh sách payment của user",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/payments/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "user", "{{userId}}"]
            }
          }
        },
        {
          "name": "5.4. Test VNPay Gateway",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invoiceId\": {{invoiceId}},\n  \"amount\": 100000,\n  \"customerEmail\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/test/test-vnpay-gateway",
              "host": ["{{baseUrl}}"],
              "path": ["api", "test", "test-vnpay-gateway"]
            }
          }
        }
      ]
    },
    {
      "name": "6. QR Code Flow",
      "item": [
        {
          "name": "6.1. Lấy danh sách trạm có thể trả xe",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/qr/available-return-stations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "qr", "available-return-stations"]
            }
          }
        },
        {
          "name": "6.2. Scan QR Code (Test với QR code hợp lệ)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('✅ Scan QR code thành công:', response);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/qr/scan/VALID_QR_CODE",
              "host": ["{{baseUrl}}"],
              "path": ["api", "qr", "scan", "VALID_QR_CODE"]
            }
          }
        },
        {
          "name": "6.3. Xác nhận lấy xe",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('✅ Lấy xe thành công:', response);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/qr/pickup/VALID_QR_CODE",
              "host": ["{{baseUrl}}"],
              "path": ["api", "qr", "pickup", "VALID_QR_CODE"]
            }
          }
        },
        {
          "name": "6.4. Xác nhận trả xe",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('✅ Trả xe thành công:', response);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/qr/return/VALID_QR_CODE?returnStationId=2",
              "host": ["{{baseUrl}}"],
              "path": ["api", "qr", "return", "VALID_QR_CODE"],
              "query": [
                {
                  "key": "returnStationId",
                  "value": "2"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "7. Error Handling Tests",
      "item": [
        {
          "name": "7.1. Test đăng ký với email đã tồn tại",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\",\n  \"fullName\": \"Nguyễn Văn Test\",\n  \"phone\": \"0123456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "7.2. Test đăng nhập với email không tồn tại",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "7.3. Test tạo booking với station không tồn tại",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stationId\": 999,\n  \"bikeQuantity\": 2,\n  \"notes\": \"Test booking\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "create"]
            }
          }
        },
        {
          "name": "7.4. Test tạo booking với số lượng xe quá lớn",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stationId\": 1,\n  \"bikeQuantity\": 100,\n  \"notes\": \"Test booking\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "create"]
            }
          }
        },
        {
          "name": "7.5. Test scan QR code không hợp lệ",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/qr/scan/INVALID_QR_CODE",
              "host": ["{{baseUrl}}"],
              "path": ["api", "qr", "scan", "INVALID_QR_CODE"]
            }
          }
        },
        {
          "name": "7.6. Test tạo payment với invoice không tồn tại",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invoiceId\": 999,\n  \"amount\": 100000,\n  \"paymentMethod\": \"VNPAY\",\n  \"customerEmail\": \"test@example.com\",\n  \"description\": \"Thanh toán thuê xe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "create"]
            }
          }
        }
      ]
    },
    {
      "name": "8. Validation Tests",
      "item": [
        {
          "name": "8.1. Test đăng ký với email không hợp lệ",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\",\n  \"password\": \"123456\",\n  \"fullName\": \"Nguyễn Văn Test\",\n  \"phone\": \"0123456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "8.2. Test đăng ký với password quá ngắn",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test2@example.com\",\n  \"password\": \"123\",\n  \"fullName\": \"Nguyễn Văn Test\",\n  \"phone\": \"0123456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "8.3. Test tạo booking với dữ liệu không hợp lệ",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stationId\": null,\n  \"bikeQuantity\": 0,\n  \"notes\": \"\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "bookings", "create"]
            }
          }
        },
        {
          "name": "8.4. Test tạo payment với amount không hợp lệ",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"invoiceId\": {{invoiceId}},\n  \"amount\": 0,\n  \"paymentMethod\": \"\",\n  \"customerEmail\": \"\",\n  \"description\": \"\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/create",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "create"]
            }
          }
        }
      ]
    }
  ]
}
